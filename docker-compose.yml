version: "3.9"
services:
  api:
    build: .
#      context: .
    image: gantrel/skypro_nbityutskiy_todolist:latest
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "5000:8000"
    env_file:
      - .env_old
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  front:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    ports:
      - "80:80"

  migrations:
    build:
      context: ./todolist/migrations
    image: gantrel/skypro_nbityutskiy_todolist:latest
    env_file:
      - .env_old
    command: python3 manage.py migrate --noinput
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: todolist_user
      POSTGRES_PASSWORD: 159951
      POSTGRES_DB: todolist
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'


  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  bot:
    image: gantrel/skypro_nbityutskiy_todolist:latest
    env_file:
      - .env_old
    restart: always
    command: python3 manage.py runbot
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_started

volumes:
  postgres_data:
  frontend: